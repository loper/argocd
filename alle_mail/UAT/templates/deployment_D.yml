---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.image_D.name }}
spec:
  selector:
    matchLabels:
      app: {{ .Values.image_D.name }}
  replicas: {{ .Values.image_D.replicas }}
  template:
    metadata:
      labels:
        app: {{ .Values.image_D.name }}
    spec:
      containers:
        - name: {{ .Values.image_D.name }}
          image: "{{ .Values.image_D.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          # command: [ "/bin/sh", "-c", "--" ]
          # args: [ "while true; do sleep 30; done;" ]
          tty: true
          envFrom:
            - configMapRef:
                name: {{ .Values.image_D.cm }}
            - secretRef:
                name: {{ .Values.image_D.secret }}
          resources:
            requests:
              memory: {{ .Values.limits.mem_min }}
              cpu: {{ .Values.limits.cpu_min }}
            limits:
              memory: {{ .Values.limits.mem_max }}
              cpu: {{ .Values.limits.cpu_max }}
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
            runAsUser: 500
            runAsGroup: 10500
          livenessProbe:
            httpGet:
              path: {{ .Values.image_D.health_probe }}
              port: {{ .Values.image_D.internal_port }}
            initialDelaySeconds: 20
            periodSeconds: 60
          readinessProbe:
            httpGet:
              path: {{ .Values.image_D.health_probe }}
              port: {{ .Values.image_D.internal_port }}
            initialDelaySeconds: 10
            periodSeconds: 60
      nodeSelector:
        kubernetes.io/hostname: {{ .Values.node }}
        
      imagePullSecrets:
        - name: {{ .Values.image.pullSecrets }}
