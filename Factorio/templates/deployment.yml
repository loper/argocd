---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.name }}
spec:
  selector:
    matchLabels:
      app: {{ .Values.name }}
  replicas: {{ .Values.image.replicas }}
  template:
    metadata:
      labels:
        app: {{ .Values.name }}
    spec:
      containers:
        - name: {{ .Values.name }}
          # command: ["/bin/sh"]
          # args: ["-c", "while true; do echo hello; sleep 100; done"]
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          tty: true
          envFrom:
            - configMapRef:
                name: {{ .Values.image.cm }}
          resources:
            requests:
              memory: {{ .Values.limits.mem_min }}
              cpu: {{ .Values.limits.cpu_min }}
            limits:
              memory: {{ .Values.limits.mem_max }}
              cpu: {{ .Values.limits.cpu_max }}
          securityContext:
            allowPrivilegeEscalation: true
            runAsNonRoot: false
            runAsUser: 845
            runAsGroup: 845
          # livenessProbe:
          #   exec:
          #     command:
          #       - tail
          #       - {{ .Values.app.log_file }}
          #   initialDelaySeconds: 10
          #   periodSeconds: 55
          volumeMounts:
            - mountPath: {{ .Values.storage.mountpoint }}
              name: data
      volumes:
        - name: data
          hostPath:
            path: {{ .Values.storage.host_path }}
            type: "DirectoryOrCreate"
